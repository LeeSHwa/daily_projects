# https://www.acmicpc.net/problem/2579

'''
문제
계단 오르기 게임은 계단 아래 시작점부터 계단 꼭대기에 위치한 도착점까지 가는 게임이다. <그림 1>과 같이 각각의 계단에는 일정한 점수가 쓰여 있는데 계단을 밟으면 그 계단에 쓰여 있는 점수를 얻게 된다.



<그림 1>

예를 들어 <그림 2>와 같이 시작점에서부터 첫 번째, 두 번째, 네 번째, 여섯 번째 계단을 밟아 도착점에 도달하면 총 점수는 10 + 20 + 25 + 20 = 75점이 된다.



<그림 2>

계단 오르는 데는 다음과 같은 규칙이 있다.

계단은 한 번에 한 계단씩 또는 두 계단씩 오를 수 있다. 즉, 한 계단을 밟으면서 이어서 다음 계단이나, 다음 다음 계단으로 오를 수 있다.
연속된 세 개의 계단을 모두 밟아서는 안 된다. 단, 시작점은 계단에 포함되지 않는다.
마지막 도착 계단은 반드시 밟아야 한다.
따라서 첫 번째 계단을 밟고 이어 두 번째 계단이나, 세 번째 계단으로 오를 수 있다. 하지만, 첫 번째 계단을 밟고 이어 네 번째 계단으로 올라가거나, 첫 번째, 두 번째, 세 번째 계단을 연속해서 모두 밟을 수는 없다.

각 계단에 쓰여 있는 점수가 주어질 때 이 게임에서 얻을 수 있는 총 점수의 최댓값을 구하는 프로그램을 작성하시오.

입력
입력의 첫째 줄에 계단의 개수가 주어진다.

둘째 줄부터 한 줄에 하나씩 제일 아래에 놓인 계단부터 순서대로 각 계단에 쓰여 있는 점수가 주어진다. 계단의 개수는 300이하의 자연수이고, 계단에 쓰여 있는 점수는 10,000이하의 자연수이다.

출력
첫째 줄에 계단 오르기 게임에서 얻을 수 있는 총 점수의 최댓값을 출력한다.
'''
# 가장 원칙이 되는 법칙을 찾아야 함
# 세 개의 계단이 연속적일 순 없음
# 끝은 무조건 포함해야함
# 그렇다면 N-1 번째는 항상 포함하고, N-3 / N-2 중 무조건 한 개만 선택되어야 함
# flag를 어떻게 세워야 할까?
# cursor역할을 해 줄 current 등의 변수도 활용하면 좋을 것 같은데
# next도 추가시켜서 현재 index에 따라 조건을 만들어서 시작과 끝 부분만 예외처리한 가장 보편적인 법칙을 적용시켜야 하나?
# 만약 next가 current보다 1만 크다면 
# 잠시만
# 이것도 max를 잘 써야하는거 아닐까?
# 항상 current를 가장 마지막 계단으로 생각해야 하지 않을까?
# 그러다가 추후 더 큰 값이 주워지게 된다면 이전 결과값과 비교하여 max연산으로 처리하면 될 것 같은데
# DP의 핵심은 잘게 나누어 저장한 뒤 활용하는 방식인 것 같음
# 점화식을 세워야 함 ex) 피보나치 수열
# 그를 위해 초기값들에 대해 하드코딩을 하든 뭔갈 해야함 (인덱스 에러 방지)

import sys
input = sys.stdin.readline

N = int(input())

current = 0
score = 0

is_sequence = False

stair = []

for _ in range(N):
    stair.append(int(input()))